{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\NTUE\\\\\\u4E09\\u4E0B\\\\\\u7562\\u903C\\u55F6\\u5C08\\\\\\u7A0B\\u5F0F\\\\trash-project\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\weekCalendar.js\";\nvar _excluded = [\"style\", \"onDayPress\", \"markedDates\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport memoize from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Map } from 'immutable';\nimport { extractComponentProps } from \"../component-updater\";\nimport { weekDayNames, sameWeek } from \"../dateutils\";\nimport { toMarkingFormat } from \"../interface\";\nimport styleConstructor from \"./style\";\nimport asCalendarConsumer from \"./asCalendarConsumer\";\nimport CalendarList from \"../calendar-list\";\nimport Week from \"../expandableCalendar/week\";\n\nvar commons = require(\"./commons\");\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\nvar NUMBER_OF_PAGES = 2;\nvar applyAndroidRtlFix = commons.isAndroid && commons.isRTL;\n\nvar WeekCalendar = function (_Component) {\n  _inherits(WeekCalendar, _Component);\n\n  var _super = _createSuper(WeekCalendar);\n\n  function WeekCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, WeekCalendar);\n\n    _this = _super.call(this, props);\n    _this.getWeekStyle = memoize(function (width, style) {\n      return [{\n        width: width\n      }, style];\n    });\n\n    _this.onDayPress = function (value) {\n      _.invoke(_this.props.context, 'setDate', value.dateString, UPDATE_SOURCES.DAY_PRESS);\n    };\n\n    _this.onScroll = function (_ref) {\n      var x = _ref.nativeEvent.contentOffset.x;\n\n      if (!_this.firstAndroidRTLScrollIgnored) {\n        _this.firstAndroidRTLScrollIgnored = true;\n        return;\n      }\n\n      if (applyAndroidRtlFix) {\n        var numOfPages = _this.state.items.length - 1;\n        var overallWidth = numOfPages * _this.containerWidth;\n        x = overallWidth - x;\n      }\n\n      var newPage = Math.round(x / _this.containerWidth);\n\n      if (_this.page !== newPage) {\n        var items = _this.state.items;\n        _this.page = newPage;\n\n        _.invoke(_this.props.context, 'setDate', items[_this.page], UPDATE_SOURCES.WEEK_SCROLL);\n\n        if (_this.page === items.length - 1) {\n          for (var i = 0; i <= NUMBER_OF_PAGES; i++) {\n            items[i] = items[i + NUMBER_OF_PAGES];\n          }\n\n          _this.setState({\n            items: _toConsumableArray(items)\n          });\n        } else if (_this.page === 0) {\n          for (var _i = items.length - 1; _i >= NUMBER_OF_PAGES; _i--) {\n            items[_i] = items[_i - NUMBER_OF_PAGES];\n          }\n\n          _this.setState({\n            items: _toConsumableArray(items)\n          });\n        }\n      }\n    };\n\n    _this.onMomentumScrollEnd = function () {\n      var items = _this.state.items;\n      var isFirstPage = _this.page === 0;\n      var isLastPage = _this.page === items.length - 1;\n\n      if (isFirstPage || isLastPage) {\n        _this.list.current.scrollToIndex({\n          animated: false,\n          index: NUMBER_OF_PAGES\n        });\n\n        _this.page = NUMBER_OF_PAGES;\n\n        var newWeekArray = _this.getDatesArray();\n\n        if (isLastPage) {\n          for (var i = NUMBER_OF_PAGES + 1; i < items.length; i++) {\n            items[i] = newWeekArray[i];\n          }\n        } else {\n          for (var _i2 = 0; _i2 < NUMBER_OF_PAGES; _i2++) {\n            items[_i2] = newWeekArray[_i2];\n          }\n        }\n\n        setTimeout(function () {\n          _this.setState({\n            items: _toConsumableArray(items)\n          });\n        }, 100);\n      }\n    };\n\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item;\n\n      var _extractComponentProp = extractComponentProps(Week, _this.props),\n          style = _extractComponentProp.style,\n          onDayPress = _extractComponentProp.onDayPress,\n          markedDates = _extractComponentProp.markedDates,\n          others = _objectWithoutProperties(_extractComponentProp, _excluded);\n\n      var _this$props = _this.props,\n          context = _this$props.context,\n          firstDay = _this$props.firstDay;\n      var isCurrentWeek = sameWeek(item, context.date, firstDay);\n      var currentContext = isCurrentWeek ? context : undefined;\n      return React.createElement(Week, _extends({}, others, {\n        key: item,\n        current: item,\n        style: _this.getWeekStyle(_this.containerWidth, style),\n        markedDates: markedDates,\n        onDayPress: onDayPress || _this.onDayPress,\n        context: currentContext,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.getItemLayout = function (data, index) {\n      return {\n        length: _this.containerWidth,\n        offset: _this.containerWidth * index,\n        index: index\n      };\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderWeekDaysNames = memoize(function (weekDaysNames) {\n      return weekDaysNames.map(function (day, idx) {\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: idx,\n          style: _this.style.dayHeader,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }\n        }, day);\n      });\n    });\n    _this.style = styleConstructor(props.theme);\n    _this.list = React.createRef();\n    _this.page = NUMBER_OF_PAGES;\n    _this.firstAndroidRTLScrollIgnored = !applyAndroidRtlFix;\n    _this.state = {\n      items: _this.getDatesArray()\n    };\n    return _this;\n  }\n\n  _createClass(WeekCalendar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$context = this.props.context,\n          updateSource = _this$props$context.updateSource,\n          date = _this$props$context.date;\n\n      if (date !== prevProps.context.date && updateSource !== UPDATE_SOURCES.WEEK_SCROLL) {\n        this.setState({\n          items: this.getDatesArray()\n        });\n        this.list.current.scrollToIndex({\n          animated: false,\n          index: NUMBER_OF_PAGES\n        });\n      }\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      return this.props.calendarWidth || commons.screenWidth;\n    }\n  }, {\n    key: \"getDatesArray\",\n    value: function getDatesArray() {\n      var array = [];\n\n      for (var index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n        var d = this.getDate(index);\n        array.push(d);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(weekIndex) {\n      var _this$props2 = this.props,\n          current = _this$props2.current,\n          context = _this$props2.context,\n          firstDay = _this$props2.firstDay;\n      var d = XDate(current || context.date);\n      var dayOfTheWeek = d.getDay();\n\n      if (dayOfTheWeek < firstDay && firstDay > 0) {\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      var dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n      var newDate = dd.addWeeks(weekIndex);\n      return toMarkingFormat(newDate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          allowShadow = _this$props3.allowShadow,\n          firstDay = _this$props3.firstDay,\n          hideDayNames = _this$props3.hideDayNames,\n          current = _this$props3.current,\n          context = _this$props3.context;\n      var items = this.state.items;\n      var weekDaysNames = weekDayNames(firstDay);\n      var extraData = Map({\n        current: current,\n        date: context.date,\n        firstDay: firstDay\n      });\n      return React.createElement(View, {\n        testID: this.props.testID,\n        style: [allowShadow && this.style.containerShadow, !hideDayNames && this.style.containerWrapper],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }\n      }, !hideDayNames && React.createElement(View, {\n        style: [this.style.week, this.style.weekCalendar],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, this.renderWeekDaysNames(weekDaysNames)), React.createElement(FlatList, {\n        ref: this.list,\n        data: items,\n        extraData: extraData,\n        style: this.style.container,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        pagingEnabled: true,\n        scrollEnabled: true,\n        renderItem: this.renderItem,\n        keyExtractor: this.keyExtractor,\n        initialScrollIndex: NUMBER_OF_PAGES,\n        getItemLayout: this.getItemLayout,\n        onScroll: this.onScroll,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return WeekCalendar;\n}(Component);\n\nWeekCalendar.displayName = 'WeekCalendar';\nWeekCalendar.propTypes = _objectSpread(_objectSpread({}, CalendarList.propTypes), {}, {\n  current: PropTypes.any,\n  allowShadow: PropTypes.bool,\n  hideDayNames: PropTypes.bool\n});\nWeekCalendar.defaultProps = {\n  firstDay: 0,\n  allowShadow: true\n};\nexport default asCalendarConsumer(WeekCalendar);","map":{"version":3,"sources":["C:/Users/User/Desktop/NTUE/三下/畢逼嗶專/程式/trash-project/node_modules/react-native-calendars/src/expandableCalendar/weekCalendar.js"],"names":["_","memoize","PropTypes","XDate","React","Component","Map","extractComponentProps","weekDayNames","sameWeek","toMarkingFormat","styleConstructor","asCalendarConsumer","CalendarList","Week","commons","require","UPDATE_SOURCES","NUMBER_OF_PAGES","applyAndroidRtlFix","isAndroid","isRTL","WeekCalendar","props","getWeekStyle","width","style","onDayPress","value","invoke","context","dateString","DAY_PRESS","onScroll","x","nativeEvent","contentOffset","firstAndroidRTLScrollIgnored","numOfPages","state","items","length","overallWidth","containerWidth","newPage","Math","round","page","WEEK_SCROLL","i","setState","onMomentumScrollEnd","isFirstPage","isLastPage","list","current","scrollToIndex","animated","index","newWeekArray","getDatesArray","setTimeout","renderItem","item","markedDates","others","firstDay","isCurrentWeek","date","currentContext","undefined","getItemLayout","data","offset","keyExtractor","toString","renderWeekDaysNames","weekDaysNames","map","day","idx","dayHeader","theme","createRef","prevProps","updateSource","calendarWidth","screenWidth","array","d","getDate","push","weekIndex","dayOfTheWeek","getDay","dd","addDays","newDate","addWeeks","allowShadow","hideDayNames","extraData","testID","containerShadow","containerWrapper","week","weekCalendar","container","displayName","propTypes","any","bool","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport memoize from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport React, {Component} from 'react';\nimport {FlatList, View, Text} from 'react-native';\nimport {Map} from 'immutable';\n\nimport {extractComponentProps} from '../component-updater';\nimport {weekDayNames, sameWeek} from '../dateutils';\nimport {toMarkingFormat} from '../interface';\nimport styleConstructor from './style';\nimport asCalendarConsumer from './asCalendarConsumer';\nimport CalendarList from '../calendar-list';\nimport Week from '../expandableCalendar/week';\n\nconst commons = require('./commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\nconst NUMBER_OF_PAGES = 2; // must be a positive number\nconst applyAndroidRtlFix = commons.isAndroid && commons.isRTL;\n\n/**\n * @description: Week calendar component\n * @note: Should be wrapped with 'CalendarProvider'\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass WeekCalendar extends Component {\n  static displayName = 'WeekCalendar';\n\n  static propTypes = {\n    ...CalendarList.propTypes,\n    /** the current date */\n    current: PropTypes.any,\n    /** whether to have shadow/elevation for the calendar */\n    allowShadow: PropTypes.bool,\n    /** whether to hide the names of the week days */\n    hideDayNames: PropTypes.bool\n  };\n\n  static defaultProps = {\n    firstDay: 0,\n    allowShadow: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    this.list = React.createRef();\n    this.page = NUMBER_OF_PAGES;\n    // On Android+RTL there's an initial scroll that cause issues\n    this.firstAndroidRTLScrollIgnored = !applyAndroidRtlFix;\n\n    this.state = {\n      items: this.getDatesArray()\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {updateSource, date} = this.props.context;\n\n    if (date !== prevProps.context.date && updateSource !== UPDATE_SOURCES.WEEK_SCROLL) {\n      this.setState({items: this.getDatesArray()});\n      this.list.current.scrollToIndex({animated: false, index: NUMBER_OF_PAGES});\n    }\n  }\n\n  get containerWidth() {\n    return this.props.calendarWidth || commons.screenWidth;\n  }\n\n  getDatesArray() {\n    const array = [];\n    for (let index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n      const d = this.getDate(index);\n      array.push(d);\n    }\n    return array;\n  }\n\n  getDate(weekIndex) {\n    const {current, context, firstDay} = this.props;\n    const d = XDate(current || context.date);\n    // get the first day of the week as date (for the on scroll mark)\n    let dayOfTheWeek = d.getDay();\n    if (dayOfTheWeek < firstDay && firstDay > 0) {\n      dayOfTheWeek = 7 + dayOfTheWeek;\n    }\n\n    // leave the current date in the visible week as is\n    const dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n    const newDate = dd.addWeeks(weekIndex);\n    return toMarkingFormat(newDate);\n  }\n\n  getWeekStyle = memoize((width, style) => {\n    return [{width}, style];\n  });\n\n  onDayPress = value => {\n    _.invoke(this.props.context, 'setDate', value.dateString, UPDATE_SOURCES.DAY_PRESS);\n  };\n\n  onScroll = ({\n    nativeEvent: {\n      contentOffset: {x}\n    }\n  }) => {\n    if (!this.firstAndroidRTLScrollIgnored) {\n      this.firstAndroidRTLScrollIgnored = true;\n      return;\n    }\n\n    // Fix reversed offset on Android+RTL\n    if (applyAndroidRtlFix) {\n      const numOfPages = this.state.items.length - 1;\n      const overallWidth = numOfPages * this.containerWidth;\n      x = overallWidth - x;\n    }\n\n    const newPage = Math.round(x / this.containerWidth);\n\n    if (this.page !== newPage) {\n      const {items} = this.state;\n      this.page = newPage;\n\n      _.invoke(this.props.context, 'setDate', items[this.page], UPDATE_SOURCES.WEEK_SCROLL);\n\n      if (this.page === items.length - 1) {\n        for (let i = 0; i <= NUMBER_OF_PAGES; i++) {\n          items[i] = items[i + NUMBER_OF_PAGES];\n        }\n        this.setState({items: [...items]});\n      } else if (this.page === 0) {\n        for (let i = items.length - 1; i >= NUMBER_OF_PAGES; i--) {\n          items[i] = items[i - NUMBER_OF_PAGES];\n        }\n        this.setState({items: [...items]});\n      }\n    }\n  };\n\n  onMomentumScrollEnd = () => {\n    const {items} = this.state;\n    const isFirstPage = this.page === 0;\n    const isLastPage = this.page === items.length - 1;\n\n    if (isFirstPage || isLastPage) {\n      this.list.current.scrollToIndex({animated: false, index: NUMBER_OF_PAGES});\n      this.page = NUMBER_OF_PAGES;\n      const newWeekArray = this.getDatesArray();\n\n      if (isLastPage) {\n        for (let i = NUMBER_OF_PAGES + 1; i < items.length; i++) {\n          items[i] = newWeekArray[i];\n        }\n      } else {\n        for (let i = 0; i < NUMBER_OF_PAGES; i++) {\n          items[i] = newWeekArray[i];\n        }\n      }\n\n      setTimeout(() => {\n        this.setState({items: [...items]});\n      }, 100);\n    }\n  };\n\n  renderItem = ({item}) => {\n    const {style, onDayPress, markedDates, ...others} = extractComponentProps(Week, this.props);\n\n    const {context, firstDay} = this.props;\n    const isCurrentWeek = sameWeek(item, context.date, firstDay);\n    const currentContext = isCurrentWeek ? context : undefined;\n\n    return (\n      <Week\n        {...others}\n        key={item}\n        current={item}\n        style={this.getWeekStyle(this.containerWidth, style)}\n        markedDates={markedDates}\n        onDayPress={onDayPress || this.onDayPress}\n        context={currentContext}\n      />\n    );\n  };\n\n  getItemLayout = (data, index) => {\n    return {\n      length: this.containerWidth,\n      offset: this.containerWidth * index,\n      index\n    };\n  };\n\n  keyExtractor = (item, index) => index.toString();\n\n  renderWeekDaysNames = memoize(weekDaysNames => {\n    return weekDaysNames.map((day, idx) => (\n      <Text\n        allowFontScaling={false}\n        key={idx}\n        style={this.style.dayHeader}\n        numberOfLines={1}\n        accessibilityLabel={''}\n        // accessible={false} // not working\n        // importantForAccessibility='no'\n      >\n        {day}\n      </Text>\n    ));\n  });\n\n  render() {\n    const {allowShadow, firstDay, hideDayNames, current, context} = this.props;\n    const {items} = this.state;\n    const weekDaysNames = weekDayNames(firstDay);\n    const extraData = Map({\n      current,\n      date: context.date,\n      firstDay\n    });\n\n    return (\n      <View\n        testID={this.props.testID}\n        style={[allowShadow && this.style.containerShadow, !hideDayNames && this.style.containerWrapper]}\n      >\n        {!hideDayNames && (\n          <View style={[this.style.week, this.style.weekCalendar]}>\n            {/* {this.props.weekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>} */}\n            {this.renderWeekDaysNames(weekDaysNames)}\n          </View>\n        )}\n        <FlatList\n          ref={this.list}\n          data={items}\n          extraData={extraData}\n          style={this.style.container}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          pagingEnabled\n          scrollEnabled\n          renderItem={this.renderItem}\n          keyExtractor={this.keyExtractor}\n          initialScrollIndex={NUMBER_OF_PAGES}\n          getItemLayout={this.getItemLayout}\n          onScroll={this.onScroll}\n          onMomentumScrollEnd={this.onMomentumScrollEnd}\n        />\n      </View>\n    );\n  }\n}\n\nexport default asCalendarConsumer(WeekCalendar);\n"]},"metadata":{},"sourceType":"module"}