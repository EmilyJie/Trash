{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\NTUE\\\\\\u4E09\\u4E0B\\\\\\u7562\\u903C\\u55F6\\u5C08\\\\\\u7A0B\\u5F0F\\\\trash-project\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport TrashSuggestScreen from \"./screen/TrashSuggestScreen\";\nimport MoneySuggestScreen from \"./screen/MoneySuggestScreen\";\nimport RecordScreen from \"./screen/RecordScreen\";\nimport TrashcanScreen from \"./screen/TrashcanScreen\";\nimport MonthScreen from \"./screen/MonthScreen\";\nimport GoalScreen from \"./screen/GoalScreen\";\nimport AboutScreen from \"./screen/AboutScreen\";\nvar Tab = createBottomTabNavigator();\nvar PERSISTENCE_KEY = \"NAVIGATION_STATE\";\nvar Stack = createStackNavigator();\n\nfunction HomeStack() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \" \",\n    component: TrashcanScreen,\n    options: {\n      headerStyle: {\n        height: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Record\",\n    component: RecordScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar StackSuggest = createStackNavigator();\n\nfunction SuggestStack() {\n  return React.createElement(StackSuggest.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(StackSuggest.Screen, {\n    name: \" \",\n    component: TrashSuggestScreen,\n    options: {\n      headerStyle: {\n        height: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar StackMonth = createStackNavigator();\n\nfunction MonthStack() {\n  return React.createElement(StackMonth.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(StackMonth.Screen, {\n    name: \" \",\n    component: MonthScreen,\n    options: {\n      headerStyle: {\n        height: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }), React.createElement(StackMonth.Screen, {\n    name: \"Profile\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar StackGoal = createStackNavigator();\n\nfunction GoalStack() {\n  return React.createElement(StackGoal.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(StackGoal.Screen, {\n    name: \" \",\n    component: GoalScreen,\n    options: {\n      headerStyle: {\n        height: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      initialNavigationState = _React$useState4[0],\n      setInitialNavigationState = _React$useState4[1];\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      var savedStateString, state;\n      return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHide();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(PERSISTENCE_KEY));\n\n            case 4:\n              savedStateString = _context.sent;\n              state = JSON.parse(savedStateString);\n              setInitialNavigationState(state);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 12:\n              _context.prev = 12;\n              setLoadingComplete(true);\n              SplashScreen.hide();\n              return _context.finish(12);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9, 12, 16]], Promise);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(NavigationContainer, {\n      initialState: initialNavigationState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, React.createElement(Tab.Navigator, {\n      initialRouteName: \"trash\",\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconPath;\n\n            if (route.name === '首頁') {\n              iconPath = focused ? require(\"./assets/btn-home.png\") : require(\"./assets/icon-home.png\");\n            } else if (route.name === '分析') {\n              iconPath = focused ? require(\"./assets/btn-trend.png\") : require(\"./assets/icon-trend.png\");\n            } else if (route.name == '月曆') {\n              iconPath = focused ? require(\"./assets/btn-month.png\") : require(\"./assets/icon-month.png\");\n            } else if (route.name == '目標') {\n              iconPath = focused ? require(\"./assets/btn-goal.png\") : require(\"./assets/icon-goal.png\");\n            }\n\n            return React.createElement(Image, {\n              style: {\n                width: 40,\n                height: 40\n              },\n              source: iconPath,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: '#fff',\n        inactiveTintColor: '#FFFFFF',\n        labelStyle: {\n          fontSize: 13,\n          marginTop: -3,\n          padding: 0,\n          fontWeight: \"600\"\n        },\n        style: {\n          height: 120,\n          backgroundColor: \"#fff\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"\\u9996\\u9801\",\n      component: HomeStack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"\\u5206\\u6790\",\n      component: SuggestStack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"\\u6708\\u66C6\",\n      component: MonthStack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"\\u76EE\\u6A19\",\n      component: GoalStack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/NTUE/三下/畢逼嗶專/程式/trash-project/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","TrashSuggestScreen","MoneySuggestScreen","RecordScreen","TrashcanScreen","MonthScreen","GoalScreen","AboutScreen","Tab","PERSISTENCE_KEY","Stack","HomeStack","headerStyle","height","StackSuggest","SuggestStack","StackMonth","MonthStack","StackGoal","GoalStack","App","useState","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","useEffect","loadResourcesAndDataAsync","SplashScreen","preventAutoHide","AsyncStorage","getItem","savedStateString","state","JSON","parse","console","warn","hide","route","tabBarIcon","focused","color","size","iconPath","name","require","width","activeTintColor","inactiveTintColor","labelStyle","fontSize","marginTop","padding","fontWeight","style","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport TrashSuggestScreen from './screen/TrashSuggestScreen';\r\nimport MoneySuggestScreen from './screen/MoneySuggestScreen';\r\nimport RecordScreen from './screen/RecordScreen';\r\nimport TrashcanScreen from \"./screen/TrashcanScreen\";\r\nimport MonthScreen from \"./screen/MonthScreen\";\r\nimport GoalScreen from './screen/GoalScreen';\r\nimport AboutScreen from './screen/AboutScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst PERSISTENCE_KEY = \"NAVIGATION_STATE\";\r\n\r\nconst Stack = createStackNavigator();\r\nfunction HomeStack () {\r\n  return (\r\n      \r\n      <Stack.Navigator>\r\n       <Stack.Screen name=\" \"component={TrashcanScreen}  \r\n        options={{\r\n          headerStyle:{\r\n            height:0,\r\n          }\r\n        }} />  \r\n        <Stack.Screen name=\"Record\" component={RecordScreen} />\r\n        <Stack.Screen name=\"Profile\" component={AboutScreen} />\r\n      </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst StackSuggest = createStackNavigator();\r\nfunction SuggestStack () {\r\n  return(\r\n    <StackSuggest.Navigator>\r\n      <StackSuggest.Screen name=\" \"component={TrashSuggestScreen}  \r\n        options={{\r\n          headerStyle:{\r\n            height:0,\r\n          }\r\n        }} />  \r\n      <Stack.Screen name=\"Profile\" component={AboutScreen} />\r\n    </StackSuggest.Navigator>\r\n  );\r\n}\r\n\r\nconst StackMonth = createStackNavigator();\r\nfunction MonthStack () {\r\n  return (\r\n      \r\n      <StackMonth.Navigator>\r\n       <StackMonth.Screen name=\" \"component={MonthScreen}  \r\n        options={{\r\n          headerStyle:{\r\n            height:0,\r\n          }\r\n        }} />  \r\n        <StackMonth.Screen name=\"Profile\" component={AboutScreen} />\r\n      </StackMonth.Navigator>\r\n  );\r\n}\r\n\r\nconst StackGoal = createStackNavigator();\r\nfunction GoalStack () {\r\n  return (\r\n      \r\n      <StackGoal.Navigator>\r\n       <StackGoal.Screen name=\" \"component={GoalScreen}  \r\n        options={{\r\n          headerStyle:{\r\n            height:0,\r\n          }\r\n        }} />  \r\n        <Stack.Screen name=\"Profile\" component={AboutScreen} />\r\n      </StackGoal.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\r\n  \r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHide();\r\n        const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\r\n        const state = JSON.parse(savedStateString);\r\n        setInitialNavigationState(state);\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hide();\r\n      }\r\n    }\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n  return (\r\n    <NavigationContainer\r\n      initialState={initialNavigationState}\r\n        \r\n      >\r\n      <Tab.Navigator\r\n        initialRouteName=\"trash\"\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color,size }) => {\r\n            let iconPath;\r\n\r\n            if (route.name === '首頁') {\r\n              iconPath = focused\r\n              ? require('./assets/btn-home.png'):\r\n              require('./assets/icon-home.png');\r\n            } else if (route.name === '分析') {\r\n              iconPath = focused\r\n              ? require('./assets/btn-trend.png'):\r\n              require('./assets/icon-trend.png');\r\n            }else if (route.name == '月曆') {\r\n              iconPath = focused\r\n              ? require('./assets/btn-month.png'):\r\n              require('./assets/icon-month.png');\r\n            }else if (route.name == '目標') {\r\n              iconPath = focused\r\n              ? require('./assets/btn-goal.png'):\r\n              require('./assets/icon-goal.png');\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return (\r\n              <Image \r\n                style={{width: 40, height: 40}}\r\n                source={iconPath} \r\n              />\r\n            );\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: '#fff',\r\n          inactiveTintColor: '#FFFFFF',\r\n          labelStyle: {\r\n            fontSize: 13,\r\n            marginTop: -3,\r\n            padding: 0,\r\n            fontWeight:\"600\"\r\n          },\r\n          style:{height:120,backgroundColor:\"#fff\"}\r\n          \r\n        }} \r\n      >\r\n        <Tab.Screen name=\"首頁\" component={HomeStack} />\r\n        <Tab.Screen name=\"分析\" component={SuggestStack} />\r\n        <Tab.Screen name=\"月曆\" component={MonthStack} />\r\n        <Tab.Screen name=\"目標\" component={GoalStack} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n    \r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}