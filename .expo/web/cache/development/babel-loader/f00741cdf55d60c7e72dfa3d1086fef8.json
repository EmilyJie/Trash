{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\NTUE\\\\\\u4E09\\u4E0B\\\\\\u7562\\u903C\\u55F6\\u5C08\\\\\\u7A0B\\u5F0F\\\\trash-project\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\calendarProvider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dateutils from \"../dateutils\";\nimport { xdateToData, toMarkingFormat } from \"../interface\";\nimport styleConstructor from \"./style\";\nimport CalendarContext from \"./calendarContext\";\n\nvar commons = require(\"./commons\");\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\nvar iconDown = require(\"../img/down.png\");\n\nvar iconUp = require(\"../img/up.png\");\n\nvar TOP_POSITION = 65;\n\nvar CalendarProvider = function (_Component) {\n  _inherits(CalendarProvider, _Component);\n\n  var _super = _createSuper(CalendarProvider);\n\n  function CalendarProvider(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarProvider);\n\n    _this = _super.call(this, props);\n\n    _this.getProviderContextValue = function () {\n      return {\n        setDate: _this.setDate,\n        date: _this.state.date,\n        prevDate: _this.state.prevDate,\n        updateSource: _this.state.updateSource,\n        setDisabled: _this.setDisabled\n      };\n    };\n\n    _this.setDate = function (date, updateSource) {\n      var sameMonth = dateutils.sameMonth(XDate(date), XDate(_this.state.date));\n\n      _this.setState({\n        date: date,\n        prevDate: _this.state.date,\n        updateSource: updateSource,\n        buttonIcon: _this.getButtonIcon(date)\n      }, function () {\n        _this.animateTodayButton(date);\n      });\n\n      _.invoke(_this.props, 'onDateChanged', date, updateSource);\n\n      if (!sameMonth) {\n        _.invoke(_this.props, 'onMonthChange', xdateToData(XDate(date)), updateSource);\n      }\n    };\n\n    _this.setDisabled = function (disabled) {\n      if (_this.props.showTodayButton && disabled !== _this.state.disabled) {\n        _this.setState({\n          disabled: disabled\n        });\n\n        _this.animateOpacity(disabled);\n      }\n    };\n\n    _this.onTodayPress = function () {\n      var today = toMarkingFormat(XDate());\n\n      _this.setDate(today, UPDATE_SOURCES.TODAY_PRESS);\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this.state = {\n      prevDate: _this.props.date || toMarkingFormat(XDate()),\n      date: _this.props.date || toMarkingFormat(XDate()),\n      updateSource: UPDATE_SOURCES.CALENDAR_INIT,\n      buttonY: new Animated.Value(-props.todayBottomMargin || -TOP_POSITION),\n      buttonIcon: _this.getButtonIcon(props.date),\n      disabled: false,\n      opacity: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(CalendarProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.date !== this.props.date) {\n        this.setDate(this.props.date, UPDATE_SOURCES.PROP_UPDATE);\n      }\n    }\n  }, {\n    key: \"getButtonIcon\",\n    value: function getButtonIcon(date) {\n      if (!this.props.showTodayButton) {\n        return;\n      }\n\n      var isPastDate = this.isPastDate(date);\n      return isPastDate ? iconDown : iconUp;\n    }\n  }, {\n    key: \"isPastDate\",\n    value: function isPastDate(date) {\n      var today = XDate();\n      var d = XDate(date);\n\n      if (today.getFullYear() > d.getFullYear()) {\n        return true;\n      }\n\n      if (today.getFullYear() === d.getFullYear()) {\n        if (today.getMonth() > d.getMonth()) {\n          return true;\n        }\n\n        if (today.getMonth() === d.getMonth()) {\n          if (today.getDate() > d.getDate()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"animateTodayButton\",\n    value: function animateTodayButton(date) {\n      if (this.props.showTodayButton) {\n        var today = toMarkingFormat(XDate());\n        var isToday = today === date;\n        Animated.spring(this.state.buttonY, {\n          toValue: isToday ? TOP_POSITION : -this.props.todayBottomMargin || -TOP_POSITION,\n          tension: 30,\n          friction: 8,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"animateOpacity\",\n    value: function animateOpacity(disabled) {\n      var disabledOpacity = this.props.disabledOpacity;\n\n      if (disabledOpacity) {\n        Animated.timing(this.state.opacity, {\n          toValue: disabled ? disabledOpacity : 1,\n          duration: 500,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"renderTodayButton\",\n    value: function renderTodayButton() {\n      var _this$state = this.state,\n          disabled = _this$state.disabled,\n          opacity = _this$state.opacity,\n          buttonY = _this$state.buttonY,\n          buttonIcon = _this$state.buttonIcon;\n      var todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n      var today = todayString.charAt(0).toUpperCase() + todayString.slice(1);\n      return React.createElement(Animated.View, {\n        style: [this.style.todayButtonContainer, {\n          transform: [{\n            translateY: buttonY\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [this.style.todayButton, this.props.todayButtonStyle],\n        onPress: this.onTodayPress,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.Image, {\n        style: [this.style.todayButtonImage, {\n          opacity: opacity\n        }],\n        source: buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }), React.createElement(Animated.Text, {\n        allowFontScaling: false,\n        style: [this.style.todayButtonText, {\n          opacity: opacity\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, today)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CalendarContext.Provider, {\n        value: this.getProviderContextValue(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, this.props.children), this.props.showTodayButton && this.renderTodayButton());\n    }\n  }]);\n\n  return CalendarProvider;\n}(Component);\n\nCalendarProvider.displayName = 'CalendarProvider';\nCalendarProvider.propTypes = {\n  date: PropTypes.any.isRequired,\n  onDateChanged: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  showTodayButton: PropTypes.bool,\n  todayBottomMargin: PropTypes.number,\n  todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  disabledOpacity: PropTypes.number\n};\nexport default CalendarProvider;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/NTUE/三下/畢逼嗶專/程式/trash-project/node_modules/react-native-calendars/src/expandableCalendar/calendarProvider.js"],"names":["_","PropTypes","XDate","React","Component","dateutils","xdateToData","toMarkingFormat","styleConstructor","CalendarContext","commons","require","UPDATE_SOURCES","iconDown","iconUp","TOP_POSITION","CalendarProvider","props","getProviderContextValue","setDate","date","state","prevDate","updateSource","setDisabled","sameMonth","setState","buttonIcon","getButtonIcon","animateTodayButton","invoke","disabled","showTodayButton","animateOpacity","onTodayPress","today","TODAY_PRESS","style","theme","CALENDAR_INIT","buttonY","Animated","Value","todayBottomMargin","opacity","prevProps","PROP_UPDATE","isPastDate","d","getFullYear","getMonth","getDate","isToday","spring","toValue","tension","friction","useNativeDriver","start","disabledOpacity","timing","duration","todayString","locales","defaultLocale","charAt","toUpperCase","slice","todayButtonContainer","transform","translateY","todayButton","todayButtonStyle","todayButtonImage","todayButtonText","styles","container","children","renderTodayButton","displayName","propTypes","any","isRequired","onDateChanged","func","onMonthChange","bool","number","oneOfType","object","array","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport React, {Component} from 'react';\nimport {StyleSheet, Animated, TouchableOpacity, View} from 'react-native';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, toMarkingFormat} from '../interface';\nimport styleConstructor from './style';\nimport CalendarContext from './calendarContext';\n\nconst commons = require('./commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\nconst iconDown = require('../img/down.png');\nconst iconUp = require('../img/up.png');\nconst TOP_POSITION = 65;\n\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass CalendarProvider extends Component {\n  static displayName = 'CalendarProvider';\n\n  static propTypes = {\n    /** Initial date in 'yyyy-MM-dd' format. Default = Date() */\n    date: PropTypes.any.isRequired,\n    /** Callback for date change event */\n    onDateChanged: PropTypes.func,\n    /** Callback for month change event */\n    onMonthChange: PropTypes.func,\n    /** Whether to show the today button */\n    showTodayButton: PropTypes.bool,\n    /** Today button's top position */\n    todayBottomMargin: PropTypes.number,\n    /** Today button's style */\n    todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** The opacity for the disabled today button (0-1) */\n    disabledOpacity: PropTypes.number\n  };\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n\n    this.state = {\n      prevDate: this.props.date || toMarkingFormat(XDate()),\n      date: this.props.date || toMarkingFormat(XDate()),\n      updateSource: UPDATE_SOURCES.CALENDAR_INIT,\n      buttonY: new Animated.Value(-props.todayBottomMargin || -TOP_POSITION),\n      buttonIcon: this.getButtonIcon(props.date),\n      disabled: false,\n      opacity: new Animated.Value(1)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.date !== this.props.date) {\n      this.setDate(this.props.date, UPDATE_SOURCES.PROP_UPDATE);\n    }\n  }\n\n  getProviderContextValue = () => {\n    return {\n      setDate: this.setDate,\n      date: this.state.date,\n      prevDate: this.state.prevDate,\n      updateSource: this.state.updateSource,\n      setDisabled: this.setDisabled\n    };\n  };\n\n  setDate = (date, updateSource) => {\n    const sameMonth = dateutils.sameMonth(XDate(date), XDate(this.state.date));\n\n    this.setState({date, prevDate: this.state.date, updateSource, buttonIcon: this.getButtonIcon(date)}, () => {\n      this.animateTodayButton(date);\n    });\n\n    _.invoke(this.props, 'onDateChanged', date, updateSource);\n\n    if (!sameMonth) {\n      _.invoke(this.props, 'onMonthChange', xdateToData(XDate(date)), updateSource);\n    }\n  };\n\n  setDisabled = disabled => {\n    if (this.props.showTodayButton && disabled !== this.state.disabled) {\n      this.setState({disabled});\n      this.animateOpacity(disabled);\n    }\n  };\n\n  getButtonIcon(date) {\n    if (!this.props.showTodayButton) {\n      return;\n    }\n    const isPastDate = this.isPastDate(date);\n    return isPastDate ? iconDown : iconUp;\n  }\n\n  isPastDate(date) {\n    const today = XDate();\n    const d = XDate(date);\n\n    if (today.getFullYear() > d.getFullYear()) {\n      return true;\n    }\n    if (today.getFullYear() === d.getFullYear()) {\n      if (today.getMonth() > d.getMonth()) {\n        return true;\n      }\n      if (today.getMonth() === d.getMonth()) {\n        if (today.getDate() > d.getDate()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  animateTodayButton(date) {\n    if (this.props.showTodayButton) {\n      const today = toMarkingFormat(XDate());\n      const isToday = today === date;\n\n      Animated.spring(this.state.buttonY, {\n        toValue: isToday ? TOP_POSITION : -this.props.todayBottomMargin || -TOP_POSITION,\n        tension: 30,\n        friction: 8,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  animateOpacity(disabled) {\n    const {disabledOpacity} = this.props;\n    if (disabledOpacity) {\n      Animated.timing(this.state.opacity, {\n        toValue: disabled ? disabledOpacity : 1,\n        duration: 500,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  onTodayPress = () => {\n    const today = toMarkingFormat(XDate());\n    this.setDate(today, UPDATE_SOURCES.TODAY_PRESS);\n  };\n\n  renderTodayButton() {\n    const {disabled, opacity, buttonY, buttonIcon} = this.state;\n    const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n    const today = todayString.charAt(0).toUpperCase() + todayString.slice(1);\n\n    return (\n      <Animated.View style={[this.style.todayButtonContainer, {transform: [{translateY: buttonY}]}]}>\n        <TouchableOpacity\n          style={[this.style.todayButton, this.props.todayButtonStyle]}\n          onPress={this.onTodayPress}\n          disabled={disabled}\n        >\n          <Animated.Image style={[this.style.todayButtonImage, {opacity}]} source={buttonIcon} />\n          <Animated.Text allowFontScaling={false} style={[this.style.todayButtonText, {opacity}]}>\n            {today}\n          </Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <CalendarContext.Provider value={this.getProviderContextValue()}>\n        <View style={[styles.container, this.props.style]}>{this.props.children}</View>\n        {this.props.showTodayButton && this.renderTodayButton()}\n      </CalendarContext.Provider>\n    );\n  }\n}\n\nexport default CalendarProvider;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}